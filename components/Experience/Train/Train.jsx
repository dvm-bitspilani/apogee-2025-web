/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Nikcore (https://sketchfab.com/NIKCORE)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/train-locomotive-steam-train-0ea265c26e41435c84365683f4e2aa9b
Title: Train | Locomotive, Steam train
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
import { useControls } from "leva";

export function Train(props) {
  const train = useRef();
  const trainRotRef = useRef();

  const { nodes, materials } = useGLTF("/models/train.glb");

  useGSAP(
    () => {
      const trainTl = gsap.timeline({ repeat: -1 });

      trainTl
        .to(train.current.position, {
          x: -0.34480000000000016,
          y: 0.0041000000000000055,
          z: 1.3266999999999969,
          duration: 2,
        })
        .to(train.current.rotation, { y: -1.71, duration: 2 }, "<")
        .from(
          trainRotRef.current.rotation,
          {
            x: 1.358796326794899,
            duration: 2,
          },
          "<"
        );
    },
    { dependencies: [train, trainRotRef] }
  );

  const { rot } = useControls({
    // rot: [1.358796326794899, 0, 0],
    rot: [Math.PI / 2, 0, 0],
  });
  return (
    <group ref={train} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={2.222}>
        <group ref={trainRotRef} rotation={[Math.PI / 2, 0, 0]} scale={0.1}>
          <mesh
            geometry={nodes["mergedBlocks_custom8(Clone)_0"].geometry}
            material={materials.custom8Clone}
          />
          <mesh
            geometry={nodes["mergedBlocks_steel(Clone)_0"].geometry}
            material={materials.steelClone}
          />
          <mesh
            geometry={nodes["mergedBlocks_metalLight(Clone)_0"].geometry}
            material={materials.metalLightClone}
          />
          <mesh
            geometry={nodes["mergedBlocks_dark(Clone)_0"].geometry}
            material={materials.darkClone}
          />
          <mesh
            geometry={nodes["mergedBlocks_custom9(Clone)_0"].geometry}
            material={materials.custom9Clone}
          />
          <mesh
            geometry={nodes["mergedBlocks__defaultMat(Clone)_0"].geometry}
            material={materials.defaultMatClone}
          />
          <mesh
            geometry={nodes["mergedBlocks_custom7(Clone)_0"].geometry}
            material={materials.custom7Clone}
          />
          <mesh
            geometry={nodes["mergedBlocks_custom10(Clone)_0"].geometry}
            material={materials.custom10Clone}
          />
          <mesh
            geometry={nodes["mergedBlocks_stone(Clone)_0"].geometry}
            material={materials.stoneClone}
          />
          <mesh
            geometry={nodes["mergedBlocks_custom6(Clone)_0"].geometry}
            material={materials.custom6Clone}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/train.glb");
